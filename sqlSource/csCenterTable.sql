// 회원 등록 테이블
CREATE TABLE JEJU_MEMBER(
    MEMBER_ID VARCHAR2(50) CONSTRAINT PK_MEMBER PRIMARY KEY
    , MEMBER_PW VARCHAR2(50) NOT NULL
    , MEMBER_NAME VARCHAR2(50) NOT NULL
    , MEMBER_TEL VARCHAR2(30) UNIQUE -- 010-1111-2222
    , GENDER VARCHAR2(5) ---- '남','여'
    , BIRTH_DATE VARCHAR2(20)
    , MEMBER_MAIL VARCHAR(30) NOT NULL
    , MEMBER_ROLL VARCHAR2(7) DEFAULT 'USER' -- USER, ADMIN, MANAGER

);

-- 회원등록 (관리자)
INSERT INTO JEJU_MEMBER(
    MEMBER_ID
    , MEMBER_PW
    , MEMBER_NAME
    , MEMBER_TEL
    , GENDER
    , BIRTH_DATE
    , MEMBER_MAIL
)VALUES(
    'admin'
    , '1111'
    , '관리자'
    , '010-1111-1111'
    , '남'
    , '1996-01-01'
    , 'admin@naver.com'
);


// admin에 관리자 권한 부여
UPDATE JEJU_MEMBER
SET MEMBER_ROLL = 'ADMIN'
WHERE MEMBER_ID = 'admin';


// 공지사항 테이블
CREATE TABLE ANNOUNCEMENT(
    ANN_NUM VARCHAR2(30) CONSTRAINT PK_ANN PRIMARY KEY
    , ANN_CATE VARCHAR2(50) CONSTRAINT FK_CATE_CODE
    REFERENCES ANN_CATE_LIST (CATE_CODE)
    , ANN_WRITER VARCHAR2(50) CONSTRAINT FK_ANN_MEMBER_ID
    REFERENCES JEJU_MEMBER (MEMBER_ID)
    , ANN_TITLE VARCHAR2(100) NOT NULL
    , ANN_CONTENT VARCHAR2(4000) NOT NULL  --썸머노트
    , ANN_DATE DATE DEFAULT SYSDATE
);

SELECT * FROM JEJU_MEMBER;
SELECT * FROM ANNOUNCEMENT
ORDER BY ANN_NUM;

INSERT INTO ANNOUNCEMENT (
    ANN_NUM
    , ANN_CATE
    , ANN_WRITER
    , ANN_TITLE
    , ANN_CONTENT
    )
VALUES(
    (SELECT 'ANN_' ||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(ANN_NUM, 5))),0) + 1, 3, '0')
    FROM ANNOUNCEMENT)
    , 'CATE_004'
    , 'admin'
    , '제목'
    , '내용'
);


/////////////////////// 카테고리 테이블
CREATE TABLE ANN_CATE_LIST (
    CATE_CODE VARCHAR2(30) CONSTRAINT PK_CATE_CODE PRIMARY KEY
    , CATE_NAME VARCHAR2(30) NOT NULL
);

INSERT INTO ANN_CATE_LIST VALUES ('CATE_001', '일반');
INSERT INTO ANN_CATE_LIST VALUES ('CATE_002', '오픈소식');
INSERT INTO ANN_CATE_LIST VALUES ('CATE_003', '서비스');
INSERT INTO ANN_CATE_LIST VALUES ('CATE_004', '당첨자발표');

SELECT * FROM ANN_CATE_LIST;

SELECT ANN_TITLE
    , CATE_NAME
    FROM ANNOUNCEMENT ANN, ANN_CATE_LIST LIST
WHERE ANN.ANN_CATE = LIST.CATE_CODE;


SELECT * FROM QNA
ORDER BY QNA_CODE DESC
OFFSET 0 ROWS FETCH FIRST 5 ROWS ONLY;

SELECT * FROM QNA
ORDER BY QNA_CODE DESC;

///////////////////////////  QNA 테이블

CREATE TABLE QNA (
    QNA_CODE VARCHAR2(50) CONSTRAINT PK_QNA PRIMARY KEY
    , CATE_CODE VARCHAR2(50) CONSTRAINT FK_QNA_CODE
    REFERENCES QNA_CATE_LIST (CATE_CODE)
    , QNA_QUESTION VARCHAR2(100) NOT NULL
    , QNA_ANSWER VARCHAR2(4000) NOT NULL
    );

INSERT INTO QNA
VALUES (
    (SELECT 'QNA_' ||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(QNA_CODE, 5))),0) + 1, 3, '0')FROM QNA)
    , 'CATE_001'
    , '제목'
    , '내용'
);

CREATE TABLE QNA_CATE_LIST (
    CATE_CODE VARCHAR2(50) CONSTRAINT PK_QNA_CODE_LIST PRIMARY KEY
    , CATE_NAME VARCHAR2(50) NOT NULL
);



INSERT INTO QNA_CATE_LIST VALUES('CATE_001', '숙박');
INSERT INTO QNA_CATE_LIST VALUES('CATE_002', '결제');
INSERT INTO QNA_CATE_LIST VALUES('CATE_003', '혜택');
INSERT INTO QNA_CATE_LIST VALUES('CATE_004', '기타');

SELECT QNA_CODE
    , QNA.CATE_CODE
    , CATE_NAME
    , QNA_QUESTION
    , QNA_ANSWER
FROM QNA QNA, QNA_CATE_LIST LIST
WHERE QNA.CATE_CODE = LIST.CATE_CODE
ORDER BY QNA_CODE DESC;


SELECT * FROM QNA;
SELECT * FROM QNA_CATE_LIST;

UPDATE QNA_CATE_LIST
SET
    CATE_NAME = '숙박'
WHERE CATE_NAME = '숙박 등록';


SELECT
    QNA_CODE
    , QNA.CATE_CODE
    , CATE_NAME
    , QNA_QUESTION
    , QNA_ANSWER
FROM QNA QNA, QNA_CATE_LIST LIST
WHERE QNA.CATE_CODE = LIST.CATE_CODE
ORDER BY QNA_CODE DESC
OFFSET 0 ROWS FETCH FIRST 7 ROWS ONLY;

